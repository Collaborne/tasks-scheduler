dist: trusty
sudo: false
group: beta
language: node_js
node_js:
- lts/carbon
services:
- docker
cache:
  directories:
  - node_modules
  - "$HOME/.cache/pip"
before_install:
- if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then BASE_NAME=${TRAVIS_BRANCH}; else BASE_NAME=pr${TRAVIS_PULL_REQUEST}; fi
- NAME=`echo ${BASE_NAME} | tr -cd '[\-._[:alnum:]]'`
- TS=`date +%Y%m%dT%H%M%S`
- VERSION_TAG=${NAME}-${TS}-${TRAVIS_COMMIT}
- TAGS="${NAME} ${VERSION_TAG}"
- if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_BRANCH}" = "master" ]; then TAGS="${TAGS} latest"; fi
- pip install --user awscli | cat
- eval `$HOME/.local/bin/aws ecr get-login --region eu-west-1 --no-include-email`
- npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
- if [ -d node_modules ] && [ x$(cat node_modules/.last-node-version 2>/dev/null) != x$(node -e 'console.log(process.version)') ]; then npm rebuild --update-binary && node -e 'console.log(process.version)' > node_modules/.last-node-version; fi
install:
- npm install
script:
- xvfb-run npm test
after_success:
- npm shrinkwrap
- mkdir -p deploy && cp -r package.json npm-shrinkwrap.json log4js.json server deploy
- printf "app=tasks-scheduler\nbranch=${TRAVIS_BRANCH}\nversion=${TS}-${TRAVIS_COMMIT}\n" > deploy/server/version
- docker build --build-arg NPM_TOKEN=$NPM_TOKEN `echo ${TAGS} | sed -re "s,\b([-._[:alnum:]]+)\b,-t ${DOCKER_NAME}:\1,g"` .
deploy:
  provider: script
  script: "${SHELL} ./travis-deploy.sh ${DOCKER_NAME} ${TAGS}"
  on:
    all_branches: true
env:
  global:
  - DOCKER_NAME=499577160181.dkr.ecr.eu-west-1.amazonaws.com/tasks/scheduler
  # TODO:
  # 1. Use `travis encrypt` for NPM_TOKEN, AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY and add these here
  # 2. Add a valid DEPLOYER_TOKEN environment variable and the `id_bamboo_github_rsa` private SSH key in the Travis settings
  # 3. Create the ECR repository using `aws ecr create-repository --repository-name tasks/scheduler`
  # 4. Activate the repository in Travis
